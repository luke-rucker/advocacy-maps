rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /events/{id} {
      // public, read-only 
      allow read: if true;
      allow write: if false;
    }
    match /generalCourts/{document=**} {
      // public, read-only 
      allow read: if true;
      allow write: if false;
    }
    match /profiles/{uid} {
      function validRoleChange() {
        return !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role'])
      }

      function validPublicChange() {
        return !request.resource.data.diff(resource.data).affectedKeys().hasAny(['public'])
            || request.auth.token.get("role", "user") == "user"
      }

      // Always visible to the user and public if `public` is true.
      // Only writable by the user.
      // Do not allow users to delete their profile, set the role field.
      // Only normal "user" roles can toggle visibility.
      // or if the profile is an organization.
      allow read: if resource.data.public || request.auth.uid == uid
      allow create, update: if request.auth.uid == uid && validRoleChange() && validPublicChange()
    }
    match /upgradeRequests/{uid} {
      allow create: if request.auth.uid == uid
    }
    // Allow querying publications individually or with a collection group.
    match /{path=**}/publishedTestimony/{id} {
      // public, read-only
      allow read: if true
      allow write: if false
    }
    match /users/{uid} {
      match /draftTestimony/{id} {
        // private, only accessible by the user
        allow read, write: if request.auth.uid == uid
      }
      match /archivedTestimony/{id} {
        // Not accessible by users, for record keeping.
        allow read, write: if false
      }
    }
  }
}